<style>
    corps {
        marge: 0;
        débordement caché;
        arrière-plan: gradient linéaire (vers le bas, # cedce7 0%, # 596a72 100%);
        famille de polices: arial;
        taille de la police: 13px;
        poids de la police: gras;
    }

    # controls-wrapper {
        position: absolue;
        indice z: 2;
        haut: 0;
        largeur: 100%;
        rembourrage: 10px;
    }

        # controls-wrapper> sélectionnez, bouton {
            couleur de fond: # 000;
            couleur: #fff;
            bordure: 1px solide # 545454;
        }

        # controls-wrapper> entrée {
            largeur: 100px;
            hauteur: 20px;
        }
</style>
    <section id = "controls-wrapper">
        <label id = "massLabel"> Masse de la planète ajoutée </label>
        <select id = "masses-list">
            <option value = "0.000003003"> Terre </option>
            <option value = "0.0009543"> Jupiter </option>
            <option value = "1"> Soleil </option>
            <option value = "0.1"> Étoile naine rouge </option>
        </select>
        <button id = "reset-button"> Réinitialiser </button>
        <button id = "pause-button" onclick = "pauseBtnClick ()"> Pause </button>
        <button id = "show-info" onclick = "showInfo = true"> Afficher les informations </button>
        <button id = "clear-system" onclick = "innerSolarSystem.masses = []; showInfo = false; graphs = false; selectedNum = 0"> Effacer le système </button>
        <label id = "scaleLabel" for = "scaleInput"> Scale </label>
        <input type = "number" id = "scaleInput" value = "70" min = "0">
        <button id = "hide-button" onclick = "hideBtnClick ()"> </button>
    </section>
    <canvas id = "canvas"> </canvas>

<script>
    / *
    * Algorithme gravitationnel à n corps
   * /
    document.getElementById ("bouton-masquer"). textContent = "<";
    var fullscreenE = faux;
    var caché = faux;
    var lastTimeFocused = 0;
    var key;
    var keyRegistered = false;
    var graphs = faux;
    const btnStyleVisibility = document.getElementById ("bouton de réinitialisation"). style.visibility;
    window.addEventListener ("keypress", updateKey, false);
    function updateKey (e) {
        clé = e.key;
    }
    function hideBtnClick () {
        if (caché) {
            caché = faux;
            valeur var = btnStyleVisibility;
            document.getElementById ("bouton de réinitialisation"). style.display = valeur;
            document.getElementById ("bouton pause"). style.display = valeur;
            document.getElementById ("show-info"). style.display = valeur;
            document.getElementById ("clear-system"). style.display = valeur;
            document.getElementById ("massLabel"). style.display = valeur;
            document.getElementById ("liste de masses"). style.display = valeur;
            document.getElementById ("scaleLabel"). style.display = valeur;
            document.getElementById ("scaleInput"). style.display = valeur;
            document.getElementById ("bouton-masquer"). textContent = "<";
        } autre {
            caché = vrai;
            valeur var = "aucun";
            document.getElementById ("bouton de réinitialisation"). style.display = valeur;
            document.getElementById ("bouton pause"). style.display = valeur;
            document.getElementById ("show-info"). style.display = valeur;
            document.getElementById ("clear-system"). style.display = valeur;
            document.getElementById ("massLabel"). style.display = valeur;
            document.getElementById ("liste de masses"). style.display = valeur;
            document.getElementById ("scaleLabel"). style.display = valeur;
            document.getElementById ("scaleInput"). style.display = valeur;
            document.getElementById ("bouton-masquer"). textContent = ">";
        }
    }
    var nombresVelocity = [];
    var nombresDistance = [];
    var pause = faux;
    var showInfo = faux;
    var selectedNum = 0;
    var maxMap = -1000;
    var minMap = 1000;
    function pauseBtnClick () {
        var pauseBtn = document.getElementById ("bouton pause");
        if (pause) {
            pause = faux;
            pauseBtn.textContent = "Pause";
        } autre {
            pause = vrai;
            pauseBtn.textContent = "Reprendre";
        }
    }
    function minMax (x) {
        if (x> maxMap) {
            maxMap = x;
        }
        if (x <minMap) {
            minMap = x;
        }
        return x;
    }
    class nBodyProblem {
        constructeur (paramètres) {
            this.g = params.g;
            this.dt = params.dt;
            this.softeningConstant = params.softeningConstant;

            this.masses = params.masses;
        }

        updatePositionVectors () {
            const massesLen = this.masses.length;

            pour (soit i = 0; i <massesLen; i ++) {
                const massI = this.masses [i];

                massI.x + = massI.vx * this.dt;
                massI.y + = massI.vy * this.dt;
                massI.z + = massI.vz * this.dt;
            }

            renvoyer ceci;
        }

        updateVelocityVectors () {
            const massesLen = this.masses.length;

            pour (soit i = 0; i <massesLen; i ++) {
                const massI = this
